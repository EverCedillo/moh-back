/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-04-08 17:16:44 UTC)
 * on 2016-04-18 at 01:13:12 UTC 
 * Modify at your own risk.
 */

package mx.ohanahome.app.backend.model.dummy2Api;

/**
 * Service definition for Dummy2Api (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link Dummy2ApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Dummy2Api extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the dummy2Api library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://moh-333.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "dummy2Api/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Dummy2Api(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Dummy2Api(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getDummy2".
   *
   * This request holds the parameters needed by the dummy2Api server.  After setting any optional
   * parameters, call the {@link GetDummy2#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetDummy2 getDummy2(java.lang.Long id) throws java.io.IOException {
    GetDummy2 result = new GetDummy2(id);
    initialize(result);
    return result;
  }

  public class GetDummy2 extends Dummy2ApiRequest<mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2> {

    private static final String REST_PATH = "dummy2/{id}";

    /**
     * Create a request for the method "getDummy2".
     *
     * This request holds the parameters needed by the the dummy2Api server.  After setting any
     * optional parameters, call the {@link GetDummy2#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetDummy2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetDummy2(java.lang.Long id) {
      super(Dummy2Api.this, "GET", REST_PATH, null, mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDummy2 setAlt(java.lang.String alt) {
      return (GetDummy2) super.setAlt(alt);
    }

    @Override
    public GetDummy2 setFields(java.lang.String fields) {
      return (GetDummy2) super.setFields(fields);
    }

    @Override
    public GetDummy2 setKey(java.lang.String key) {
      return (GetDummy2) super.setKey(key);
    }

    @Override
    public GetDummy2 setOauthToken(java.lang.String oauthToken) {
      return (GetDummy2) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDummy2 setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDummy2) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDummy2 setQuotaUser(java.lang.String quotaUser) {
      return (GetDummy2) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDummy2 setUserIp(java.lang.String userIp) {
      return (GetDummy2) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetDummy2 setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetDummy2 set(String parameterName, Object value) {
      return (GetDummy2) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertDummy2".
   *
   * This request holds the parameters needed by the dummy2Api server.  After setting any optional
   * parameters, call the {@link InsertDummy2#execute()} method to invoke the remote operation.
   *
   * @param content the {@link mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2}
   * @return the request
   */
  public InsertDummy2 insertDummy2(mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2 content) throws java.io.IOException {
    InsertDummy2 result = new InsertDummy2(content);
    initialize(result);
    return result;
  }

  public class InsertDummy2 extends Dummy2ApiRequest<mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2> {

    private static final String REST_PATH = "dummy2";

    /**
     * Create a request for the method "insertDummy2".
     *
     * This request holds the parameters needed by the the dummy2Api server.  After setting any
     * optional parameters, call the {@link InsertDummy2#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertDummy2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2}
     * @since 1.13
     */
    protected InsertDummy2(mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2 content) {
      super(Dummy2Api.this, "POST", REST_PATH, content, mx.ohanahome.app.backend.model.dummy2Api.model.Dummy2.class);
    }

    @Override
    public InsertDummy2 setAlt(java.lang.String alt) {
      return (InsertDummy2) super.setAlt(alt);
    }

    @Override
    public InsertDummy2 setFields(java.lang.String fields) {
      return (InsertDummy2) super.setFields(fields);
    }

    @Override
    public InsertDummy2 setKey(java.lang.String key) {
      return (InsertDummy2) super.setKey(key);
    }

    @Override
    public InsertDummy2 setOauthToken(java.lang.String oauthToken) {
      return (InsertDummy2) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertDummy2 setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertDummy2) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertDummy2 setQuotaUser(java.lang.String quotaUser) {
      return (InsertDummy2) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertDummy2 setUserIp(java.lang.String userIp) {
      return (InsertDummy2) super.setUserIp(userIp);
    }

    @Override
    public InsertDummy2 set(String parameterName, Object value) {
      return (InsertDummy2) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendEmail".
   *
   * This request holds the parameters needed by the dummy2Api server.  After setting any optional
   * parameters, call the {@link SendEmail#execute()} method to invoke the remote operation.
   *
   * @param iid
   * @param subject
   * @param to
   * @return the request
   */
  public SendEmail sendEmail(java.lang.String iid, java.lang.String subject, java.lang.String to) throws java.io.IOException {
    SendEmail result = new SendEmail(iid, subject, to);
    initialize(result);
    return result;
  }

  public class SendEmail extends Dummy2ApiRequest<Void> {

    private static final String REST_PATH = "dummy";

    /**
     * Create a request for the method "sendEmail".
     *
     * This request holds the parameters needed by the the dummy2Api server.  After setting any
     * optional parameters, call the {@link SendEmail#execute()} method to invoke the remote
     * operation. <p> {@link
     * SendEmail#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param iid
     * @param subject
     * @param to
     * @since 1.13
     */
    protected SendEmail(java.lang.String iid, java.lang.String subject, java.lang.String to) {
      super(Dummy2Api.this, "POST", REST_PATH, null, Void.class);
      this.iid = com.google.api.client.util.Preconditions.checkNotNull(iid, "Required parameter iid must be specified.");
      this.subject = com.google.api.client.util.Preconditions.checkNotNull(subject, "Required parameter subject must be specified.");
      this.to = com.google.api.client.util.Preconditions.checkNotNull(to, "Required parameter to must be specified.");
    }

    @Override
    public SendEmail setAlt(java.lang.String alt) {
      return (SendEmail) super.setAlt(alt);
    }

    @Override
    public SendEmail setFields(java.lang.String fields) {
      return (SendEmail) super.setFields(fields);
    }

    @Override
    public SendEmail setKey(java.lang.String key) {
      return (SendEmail) super.setKey(key);
    }

    @Override
    public SendEmail setOauthToken(java.lang.String oauthToken) {
      return (SendEmail) super.setOauthToken(oauthToken);
    }

    @Override
    public SendEmail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendEmail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendEmail setQuotaUser(java.lang.String quotaUser) {
      return (SendEmail) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendEmail setUserIp(java.lang.String userIp) {
      return (SendEmail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String iid;

    /**

     */
    public java.lang.String getIid() {
      return iid;
    }

    public SendEmail setIid(java.lang.String iid) {
      this.iid = iid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String subject;

    /**

     */
    public java.lang.String getSubject() {
      return subject;
    }

    public SendEmail setSubject(java.lang.String subject) {
      this.subject = subject;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String to;

    /**

     */
    public java.lang.String getTo() {
      return to;
    }

    public SendEmail setTo(java.lang.String to) {
      this.to = to;
      return this;
    }

    @Override
    public SendEmail set(String parameterName, Object value) {
      return (SendEmail) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Dummy2Api}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Dummy2Api}. */
    @Override
    public Dummy2Api build() {
      return new Dummy2Api(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link Dummy2ApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDummy2ApiRequestInitializer(
        Dummy2ApiRequestInitializer dummy2apiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dummy2apiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
